---
on:
  push:
    branches:
    - main
    tags:
    - v*
  pull_request:
    branches:
    - main
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.18.2]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2.4.2
    - name: Compile
      run: make build
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3.2.0
      with:
        version: latest
        skip-pkg-cache: true
        skip-build-cache: true
    - name: Test
      run: make test-unit
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2.1.0
      with:
        fail_ci_if_error: true
        files: ./coverage.txt
        verbose: true
    - name: Image Build
      run: make image
    - name: Install GoReleaser
      uses: goreleaser/goreleaser-action@v3.2.0
      with:
        install-only: true
        version: latest
    - name: Test GoReleaser
      run: make test-release
  deploy:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.2
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=docker.io/80x86/git2consul
          VERSION=${GITHUB_REF#refs/tags/}
          TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:latest"
          echo ::set-output name=tags::${TAGS}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to docker.io
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
          registry: docker.io
      - name: Build and push to docker.io
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.prep.outputs.tags }}
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v3.2.0
        with:
          install-only: true
          version: v1.0.0
      - name: Run GoReleaser
        run: make release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
